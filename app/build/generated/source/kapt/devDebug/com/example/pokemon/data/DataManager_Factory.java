// Generated by Dagger (https://dagger.dev).
package com.example.pokemon.data;

import com.example.pokemon.network.APIService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataManager_Factory implements Factory<DataManager> {
  private final Provider<APIService> apiProvider;

  private final Provider<PreferencesHelper> prefsProvider;

  private final Provider<AppDatabase> localDatabaseProvider;

  public DataManager_Factory(Provider<APIService> apiProvider,
      Provider<PreferencesHelper> prefsProvider, Provider<AppDatabase> localDatabaseProvider) {
    this.apiProvider = apiProvider;
    this.prefsProvider = prefsProvider;
    this.localDatabaseProvider = localDatabaseProvider;
  }

  @Override
  public DataManager get() {
    return newInstance(apiProvider.get(), prefsProvider.get(), localDatabaseProvider.get());
  }

  public static DataManager_Factory create(Provider<APIService> apiProvider,
      Provider<PreferencesHelper> prefsProvider, Provider<AppDatabase> localDatabaseProvider) {
    return new DataManager_Factory(apiProvider, prefsProvider, localDatabaseProvider);
  }

  public static DataManager newInstance(APIService api, PreferencesHelper prefs,
      AppDatabase localDatabase) {
    return new DataManager(api, prefs, localDatabase);
  }
}
