// Generated by Dagger (https://dagger.dev).
package com.example.pokemon.base;

import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector<T extends BaseViewModel> implements MembersInjector<BaseActivity<T>> {
  private final Provider<ViewModelProvider.Factory> factoryProvider;

  public BaseActivity_MembersInjector(Provider<ViewModelProvider.Factory> factoryProvider) {
    this.factoryProvider = factoryProvider;
  }

  public static <T extends BaseViewModel> MembersInjector<BaseActivity<T>> create(
      Provider<ViewModelProvider.Factory> factoryProvider) {
    return new BaseActivity_MembersInjector<T>(factoryProvider);
  }

  @Override
  public void injectMembers(BaseActivity<T> instance) {
    injectFactory(instance, factoryProvider.get());
  }

  @InjectedFieldSignature("com.example.pokemon.base.BaseActivity.factory")
  public static <T extends BaseViewModel> void injectFactory(BaseActivity<T> instance,
      ViewModelProvider.Factory factory) {
    instance.factory = factory;
  }
}
